#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
version: '3'

networks:
  dev-caliper-overlay-2org:
    external:
      name: dev-caliper-overlay-2org
#   net:
#     driver: overlay
#     attachable: true
#   host:
#     external:
#       name: host
    #   name: "host"
volumes:
    prometheus_data: {}
    grafana_storage: {}

services:
    prometheus:
      image: prom/prometheus
      networks:
        - dev-caliper-overlay-2org
      container_name: prometheus
      volumes:
        - ./prometheus/prometheus-fabric.yml:/etc/prometheus/prometheus.yml
        - prometheus_data:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/usr/share/prometheus/console_libraries'
        - '--web.console.templates=/usr/share/prometheus/consoles'
      ports:
        - "9090:9090"   
    #   networks: 
    #     - host
    grafana:
      image: grafana/grafana
      networks:
        - dev-caliper-overlay-2org
      container_name: grafana
      user: "104"
      depends_on:
        - prometheus
      ports:
        - 3000:3000
      volumes:
        - grafana_storage:/var/lib/grafana
        - ./grafana/provisioning/:/etc/grafana/provisioning/
      env_file:
        - ./grafana/config.monitoring
      restart: always   
    cadvisor:
      image: google/cadvisor:v0.27.4
      networks:
        - dev-caliper-overlay-2org
      privileged: true
      container_name: cadvisor
      volumes:
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
        # - /cgroup:/cgroup:ro
      ports:
        - 8080:8080
      restart: always

    ca_org1_example_com:
        image: hyperledger/fabric-ca:${FABRIC_CA_VERSION}
        networks:
            dev-caliper-overlay-2org:
                aliases:
                - ca.org1.example.com 
        environment:
        - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
        - FABRIC_CA_SERVER_CA_NAME=ca.org1.example.com
        - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org1.example.com-cert.pem
        - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/key.pem
        - FABRIC_CA_SERVER_TLS_ENABLED=true
        - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-tls/tlsca.org1.example.com-cert.pem
        - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-tls/key.pem
        ports:
        - "7054:7054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
        volumes:
        - ../../config_raft/crypto-config/peerOrganizations/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
        - ../../config_raft/crypto-config/peerOrganizations/org1.example.com/tlsca/:/etc/hyperledger/fabric-ca-server-tls
        # #container_name: ca.org1.example.com
        deploy:
            placement:
                constraints: [node.hostname == caliper-302-1]

    ca_org2_example_com:
        image: hyperledger/fabric-ca:${FABRIC_CA_VERSION}
        networks:
            dev-caliper-overlay-2org:
                aliases:
                - ca.org2.example.com
        environment:
        - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
        - FABRIC_CA_SERVER_CA_NAME=ca.org2.example.com
        - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.org2.example.com-cert.pem
        - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/key.pem
        - FABRIC_CA_SERVER_TLS_ENABLED=true
        - FABRIC_CA_SERVER_TLS_CERTFILE=/etc/hyperledger/fabric-ca-server-tls/tlsca.org2.example.com-cert.pem
        - FABRIC_CA_SERVER_TLS_KEYFILE=/etc/hyperledger/fabric-ca-server-tls/key.pem
        ports:
        - "8054:7054"
        command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
        volumes:
        - ../../config_raft/crypto-config/peerOrganizations/org2.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
        - ../../config_raft/crypto-config/peerOrganizations/org2.example.com/tlsca/:/etc/hyperledger/fabric-ca-server-tls
        # #container_name: ca.org2.example.com
        deploy:
            placement:
                constraints: [node.hostname == caliper-302-1]


    orderer0_example_com:
        # #container_name: orderer0.example.com
        image: hyperledger/fabric-orderer:${FABRIC_CA_VERSION}
        networks:
            dev-caliper-overlay-2org:
                aliases:
                - orderer0.example.com 
        environment:
        - FABRIC_LOGGING_SPEC=grpc=debug:debug
        - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
        - ORDERER_GENERAL_GENESISMETHOD=file
        - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
        - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
        - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
        - ORDERER_GENERAL_TLS_ENABLED=true
        - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
        - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
        - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
        - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
        - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: orderer
        ports:
        - 7050:7050
        volumes:
        - ../../config_raft/:/etc/hyperledger/configtx
        - ../../config_raft/crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/:/etc/hyperledger/msp/orderer
        # depends_on:
        # - ca.org1.example.com
        # - ca.org2.example.com
        deploy:
            placement:
                constraints: [node.hostname == caliper-302-1]

    orderer1_example_com:
        #container_name: orderer1.example.com
        image: hyperledger/fabric-orderer:${FABRIC_CA_VERSION}
        networks:
            dev-caliper-overlay-2org:
                aliases:
                - orderer1.example.com
        environment:
        - FABRIC_LOGGING_SPEC=grpc=debug:debug
        - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
        - ORDERER_GENERAL_GENESISMETHOD=file
        - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
        - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
        - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
        - ORDERER_GENERAL_TLS_ENABLED=true
        - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
        - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
        - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
        - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
        - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: orderer
        ports:
        - 8050:7050
        volumes:
        - ../../config_raft/:/etc/hyperledger/configtx
        - ../../config_raft/crypto-config/ordererOrganizations/example.com/orderers/orderer1.example.com/:/etc/hyperledger/msp/orderer
        # depends_on:
        # - ca.org1.example.com
        # - ca.org2.example.com
        deploy:
            placement:
                constraints: [node.hostname == caliper-302-1]

    orderer2_example_com:
        #container_name: orderer2.example.com
        image: hyperledger/fabric-orderer:${FABRIC_CA_VERSION}
        networks:
            dev-caliper-overlay-2org:
                aliases:
                - orderer2.example.com
        environment:
        - FABRIC_LOGGING_SPEC=grpc=debug:debug
        - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
        - ORDERER_GENERAL_GENESISMETHOD=file
        - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
        - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
        - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/msp
        - ORDERER_GENERAL_TLS_ENABLED=true
        - ORDERER_GENERAL_TLS_PRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
        - ORDERER_GENERAL_TLS_CERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
        - ORDERER_GENERAL_TLS_ROOTCAS=[/etc/hyperledger/msp/orderer/tls/ca.crt]
        - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/etc/hyperledger/msp/orderer/tls/server.crt
        - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/etc/hyperledger/msp/orderer/tls/server.key
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: orderer
        ports:
        - 9050:7050
        volumes:
        - ../../config_raft/:/etc/hyperledger/configtx
        - ../../config_raft/crypto-config/ordererOrganizations/example.com/orderers/orderer2.example.com/:/etc/hyperledger/msp/orderer
        # depends_on:
        # - ca.org1.example.com
        # - ca.org2.example.com
        deploy:
            placement:
                constraints: [node.hostname == caliper-302-1]

    
    peer0_org1_example_com:
        #container_name: peer0.org1.example.com
        image: hyperledger/fabric-peer:${FABRIC_CA_VERSION}
        networks:
            dev-caliper-overlay-2org:
                aliases:
                - peer0.org1.example.com
        environment:
        - FABRIC_LOGGING_SPEC=grpc=debug:debug
        - CORE_CHAINCODE_LOGGING_LEVEL=INFO
        - CORE_CHAINCODE_LOGGING_SHIM=INFO
        # - CORE_CHAINCODE_EXECUTETIMEOUT=999999
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_PEER_ID=peer0.org1.example.com
        - CORE_PEER_ENDORSER_ENABLED=true
        - CORE_PEER_LOCALMSPID=Org1MSP
        - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
        - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
        - CORE_PEER_GOSSIP_USELEADERELECTION=true
        - CORE_PEER_GOSSIP_ORGLEADER=false
        - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=dev-caliper-overlay-2org
        # - CORE_OPERATIONS_LISTENADDRESS=peer0.org1.example.com:9443
        - CORE_METRICS_PROVIDER=prometheus
        - CORE_CHAINCODE_STARTUPTIMEOUT=600s
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: peer node start
        ports:
        - 7051:7051
        volumes:
        - /var/run/:/host/var/run/
        - ../../config_raft/crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/:/etc/hyperledger/msp/peer
        # depends_on:
        # - orderer0.example.com
        # - orderer1.example.com
        # - orderer2.example.com
        deploy:
            placement:
                constraints: [node.hostname == caliper-302-1]

    peer0_org2_example_com:
        #container_name: peer0.org2.example.com
        image: hyperledger/fabric-peer:${FABRIC_CA_VERSION}
        networks:
            dev-caliper-overlay-2org:
                aliases:
                - peer0.org2.example.com
        environment:
        - FABRIC_LOGGING_SPEC=grpc=debug:debug
        - CORE_CHAINCODE_LOGGING_LEVEL=INFO
        - CORE_CHAINCODE_LOGGING_SHIM=INFO
        # - CORE_CHAINCODE_EXECUTETIMEOUT=999999
        - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
        - CORE_PEER_ID=peer0.org2.example.com
        - CORE_PEER_ENDORSER_ENABLED=true
        - CORE_PEER_LOCALMSPID=Org2MSP
        - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
        - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp/
        - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
        - CORE_PEER_GOSSIP_USELEADERELECTION=true
        - CORE_PEER_GOSSIP_ORGLEADER=false
        - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
        - CORE_PEER_TLS_ENABLED=true
        - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/msp/peer/tls/server.key
        - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/msp/peer/tls/server.crt
        - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/msp/peer/tls/ca.crt
        - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=dev-caliper-overlay-2org
        # - CORE_OPERATIONS_LISTENADDRESS=peer0.org2.example.com:9443
        - CORE_METRICS_PROVIDER=prometheus
        - CORE_CHAINCODE_STARTUPTIMEOUT=600s
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: peer node start
        ports:
        - 8051:7051
        volumes:
        - /var/run/:/host/var/run/
        - ../../config_raft/crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/:/etc/hyperledger/msp/peer
        # depends_on:
        # - orderer0.example.com
        # - orderer1.example.com
        # - orderer2.example.com
        deploy:
            placement:
                constraints: [node.hostname == caliper-302-1]

    